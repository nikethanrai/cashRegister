{"version":3,"sources":["components/cash.js","components/table.js","App.js","index.js"],"names":["Cash","setCash","cash","billAmt","className","onInput","input","target","value","type","id","Table","num","setNum","App","useState","setbillAmt","text","setText","compare","setCompare","onClick","console","log","Number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAkBeA,EAhBH,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,QAAwB,EAAhBC,KAAgB,EAAXC,QAQvB,OACI,sBAAKC,UAAU,YAAf,yBACA,uBAAOC,QARf,SAA0BC,GACtBL,EAAQK,EAAMC,OAAOC,QAOiBC,KAAK,SAASC,GAAG,gBCmC5CC,EA5CH,SAAC,GAAe,EAAdC,IAAc,EAAVC,OAed,OACI,wBAAOT,UAAU,eAAjB,UACI,oDACA,+BACI,8CACA,oBAAIA,UAAU,gBACd,oBAAIA,UAAU,gBACd,oBAAIA,UAAU,gBACd,oBAAIA,UAAU,gBACd,oBAAIA,UAAU,gBACd,oBAAIA,UAAU,gBACd,oBAAIA,UAAU,mBAGlB,+BACI,yCACA,wCACA,uCACA,uCACA,sCACA,sCACA,qCACA,4CCiBDU,MApDf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOZ,EAAP,KAAgBa,EAAhB,KACA,EAAwBD,mBAAS,IAAjC,mBAAOb,EAAP,KAAaD,EAAb,KACA,EAAwBc,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAA8BH,mBAAS,IAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAAoB,GAAbR,EAAP,KAAWC,EAAX,KA2BA,OACE,sBAAKT,UAAU,MAAf,UACE,+CACA,uIACA,sBAAKA,UAAU,QAAf,0BACE,uBAAOC,QA9Bb,SAA0BC,GACxBU,EAAWV,EAAMC,OAAOC,QA6BcC,KAAK,SAASC,GAAG,YAEnD,mBAAGA,GAAG,YAAN,SAAmBO,OAGrB,cAAC,EAAD,CAAMhB,QAASA,EAASC,KAAMA,EAAMC,QAASA,IAC7C,mBAAGO,GAAG,YAAN,SAAmBS,IACnB,wBAAQE,QAAS,WAhCnBC,QAAQC,IAAIX,GAEVM,EADEf,EAAU,EACJ,GAGA,2CAENqB,OAAOrB,GAAWqB,OAAOtB,GAC3BkB,EAAW,IAGXA,EAAW,8BAqB8BV,GAAG,SAA5C,oBAEA,cAAC,EAAD,CAAOE,IAAKA,EAAKC,OAAQA,QC9C/BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.91b07ce5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Cash =({setCash,cash,billAmt})=>{\r\n\r\nfunction cashInputHandler(input){\r\n    setCash(input.target.value)\r\n}\r\n\r\n\r\n\r\n    return(\r\n        <div className='cashGiven'> Cash Given:\r\n        <input onInput={cashInputHandler} type='number' id='cashAmt' />\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default Cash","import React from 'react'\r\n\r\n\r\nconst Table=({num,setNum})=>{\r\n\r\nconst notesAvlb=[2000,500,100,20,10,5,1]    \r\nfunction calculateChange(amtToBeReturned){\r\n    for (let i=0;i<notesAvlb.length;i++){\r\n        const numberOfNotes=Math.trunc(amtToBeReturned/notesAvlb[i])\r\n        amtToBeReturned%=notesAvlb[i]\r\n        setNum([])\r\n        \r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n    return(\r\n        <table className='change-table'>\r\n            <caption>Return Change</caption>\r\n            <tr>\r\n                <th>No. of Notes</th>\r\n                <td className=\"no-of-notes\"></td>\r\n                <td className=\"no-of-notes\"></td>\r\n                <td className=\"no-of-notes\"></td>\r\n                <td className=\"no-of-notes\"></td>\r\n                <td className=\"no-of-notes\"></td>\r\n                <td className=\"no-of-notes\"></td>\r\n                <td className=\"no-of-notes\"></td>\r\n                \r\n            </tr>\r\n            <tr>\r\n                <th> Notes </th>\r\n                <td> 2000 </td>\r\n                <td> 500 </td>\r\n                <td> 100 </td>\r\n                <td> 20 </td>\r\n                <td> 10 </td>\r\n                <td> 5 </td>\r\n                <td> 1 </td>\r\n                \r\n            </tr>\r\n\r\n        </table>\r\n    )\r\n}\r\nexport default Table        ","import React, { useState } from \"react\";\nimport './App.css';\nimport Cash from './components/cash'\nimport Table from \"./components/table\";\n\nfunction App() {\n  const [billAmt, setbillAmt] = useState('')\n  const [cash, setCash] = useState('')\n  const [text, setText] = useState('')\n  const [compare, setCompare] = useState('')\n  const [num,setNum]=([])\n\n  function billInputHandler(input) {\n    setbillAmt(input.target.value)\n  }\n  \n  function validateAmt() {\n    console.log(num)\n    if (billAmt > 0) {\n      setText('')\n\n    } else {\n      setText('Tf are you putting amount lesser than 0')\n    }\n    if (Number(billAmt) < Number(cash)) {\n      setCompare('')\n      \n    } else {\n      setCompare('Do you wanna wash plates?')\n    }\n  }\n\n  \n\n    \n  \n\n  return (\n    <div className=\"App\">\n      <h1>Monay Monay!!</h1>\n      <p>Enter the bill amount and the cash given by the customer to know the minimum number of notes to return</p>\n      <div className='label'> Bill Amount:\n        <input onInput={billInputHandler} type='number' id='billAmt' />\n        {/* <button id='next'>Next</button> */}\n        <p id='error-msg'>{text}</p>\n\n      </div>\n      <Cash setCash={setCash} cash={cash} billAmt={billAmt} />\n      <p id='error-msg'>{compare}</p>\n      <button onClick={() => { validateAmt()}} id='submit'>Submit</button>\n\n      <Table num={num} setNum={setNum}/>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}